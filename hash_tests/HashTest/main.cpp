
///test of Tsahi and Doron
#include <cassert>
#include <iostream>

#include "../DynamicHashtable.h"

using namespace std;

class Player {
   private:
    int key;
    int data;

   public:
    Player(int key, int data) : key(key), data(data) {}
    int getID() {
        return key;
    }
    int getData() {
        return data;
    }
};

using namespace DH;

//typedef DynamicHashtable<Player*> HashTable;

int main() {
    DynamicHashtable<Player> hashtable;
    ///insert here the tests

    //remove insert, find, 100 players

    Player player1(32, 1019);
    Player player2(41, 1180);
    Player player3(89, 305);
    Player player4(91, 1455);
    Player player5(98, 74);
    Player player6(56, 260);
    Player player7(58, 802);
    Player player8(18, 272);
    Player player9(86, 473);
    Player player10(44, 313);
    Player player11(42, 65);
    Player player12(84, 566);
    Player player13(80, 1111);
    Player player14(8, 1191);
    Player player15(82, 726);
    Player player16(45, 331);
    Player player17(65, 1266);
    Player player18(76, 1369);
    Player player19(66, 1439);
    Player player20(70, 927);
    Player player21(77, 65);
    Player player22(31, 1030);
    Player player23(6, 1175);
    Player player24(25, 1495);
    Player player25(22, 1168);
    Player player26(90, 671);
    Player player27(39, 1409);
    Player player28(9, 1475);
    Player player29(62, 633);
    Player player30(53, 448);
    Player player31(64, 540);
    Player player32(17, 689);
    Player player33(95, 1428);
    Player player34(49, 264);
    Player player35(88, 986);
    Player player36(81, 1226);
    Player player37(47, 3);
    Player player38(29, 917);
    Player player39(20, 339);
    Player player40(57, 351);
    Player player41(10, 119);
    Player player42(85, 31);
    Player player43(94, 221);
    Player player44(7, 1458);
    Player player45(26, 76);
    Player player46(78, 1138);
    Player player47(43, 1046);
    Player player48(21, 524);
    Player player49(14, 1052);
    Player player50(16, 87);
    Player player51(37, 693);
    Player player52(19, 1019);
    Player player53(73, 351);
    Player player54(15, 560);
    Player player55(55, 1468);
    Player player56(35, 1477);
    Player player57(34, 562);
    Player player58(52, 1085);
    Player player59(71, 1274);
    Player player60(3, 960);
    Player player61(51, 1131);
    Player player62(75, 435);
    Player player63(38, 1104);
    Player player64(4, 440);
    Player player65(59, 922);
    Player player66(99, 287);
    Player player67(50, 64);
    Player player68(67, 1038);
    Player player69(97, 604);
    Player player70(13, 18);
    Player player71(83, 1249);
    Player player72(60, 759);
    Player player73(33, 1002);
    Player player74(12, 1366);
    Player player75(11, 8);
    Player player76(24, 1228);
    Player player77(27, 181);
    Player player78(72, 555);
    Player player79(79, 922);
    Player player80(40, 1061);
    Player player81(96, 748);
    Player player82(93, 170);
    Player player83(2, 1275);
    Player player84(87, 724);
    Player player85(46, 1051);
    Player player86(92, 1375);
    Player player87(69, 1358);
    Player player88(36, 1415);
    Player player89(61, 1146);
    Player player90(1, 945);
    Player player91(23, 861);
    Player player92(68, 73);
    Player player93(48, 297);
    Player player94(54, 651);
    Player player95(74, 533);
    Player player96(30, 91);
    Player player97(63, 1289);
    Player player98(5, 457);
    Player player99(28, 1449);
    assert(hashtable.Insert(player39.getID(), player39) == SUCCESS);
    assert(hashtable.Insert(player39.getID(), player39) == ALREADY_EXIST);
    assert(hashtable.Remove(player74.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player46.getID(), player46) == SUCCESS);
    assert(hashtable.Remove(player23.getID()) == NOT_FOUND);
    assert(hashtable.Find(player58.getID()) == nullptr);
    assert(hashtable.Find(player8.getID()) == nullptr);
    assert(hashtable.Remove(player66.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player70.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player71.getID()) == NOT_FOUND);
    assert(hashtable.Find(player1.getID()) == nullptr);
    assert(hashtable.Find(player93.getID()) == nullptr);
    assert(hashtable.Insert(player95.getID(), player95) == SUCCESS);
    assert(hashtable.Remove(player61.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player50.getID(), player50) == SUCCESS);
    assert(hashtable.Insert(player35.getID(), player35) == SUCCESS);
    assert(hashtable.Find(player78.getID()) == nullptr);
    assert(hashtable.Remove(player76.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player61.getID(), player61) == SUCCESS);
    assert(hashtable.Find(player47.getID()) == nullptr);
    assert(hashtable.Find(player3.getID()) == nullptr);
    assert(hashtable.Insert(player47.getID(), player47) == SUCCESS);
    assert(hashtable.Remove(player42.getID()) == NOT_FOUND);
    assert(hashtable.Find(player32.getID()) == nullptr);
    assert(hashtable.Remove(player79.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player70.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player28.getID()) == NOT_FOUND);
    assert(hashtable.Find(player34.getID()) == nullptr);
    assert(hashtable.Remove(player59.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player87.getID(), player87) == SUCCESS);
    assert(hashtable.Find(player9.getID()) == nullptr);
    assert(hashtable.Remove(player52.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player23.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player87.getID()) == SUCCESS);
    assert(hashtable.Insert(player32.getID(), player32) == SUCCESS);
    assert(hashtable.Insert(player43.getID(), player43) == SUCCESS);
    assert(hashtable.Remove(player79.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player18.getID(), player18) == SUCCESS);
    assert(hashtable.Insert(player87.getID(), player87) == SUCCESS);
    assert(hashtable.Remove(player6.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player4.getID(), player4) == SUCCESS);
    assert(hashtable.Find(player93.getID()) == nullptr);
    assert(hashtable.Insert(player5.getID(), player5) == SUCCESS);
    assert(hashtable.Remove(player55.getID()) == NOT_FOUND);
    assert(hashtable.Find(player9.getID()) == nullptr);
    assert(hashtable.Insert(player67.getID(), player67) == SUCCESS);
    assert(hashtable.Insert(player47.getID(), player47) == ALREADY_EXIST);
    assert(hashtable.Insert(player38.getID(), player38) == SUCCESS);
    assert(hashtable.Remove(player36.getID()) == NOT_FOUND);
    assert(hashtable.Find(player66.getID()) == nullptr);
    assert(hashtable.Remove(player92.getID()) == NOT_FOUND);
    assert(hashtable.Find(player63.getID()) == nullptr);
    assert(hashtable.Insert(player51.getID(), player51) == SUCCESS);
    assert(hashtable.Find(player9.getID()) == nullptr);
    assert(hashtable.Insert(player69.getID(), player69) == SUCCESS);
    assert(hashtable.Find(player20.getID()) == nullptr);
    assert(hashtable.Find(player72.getID()) == nullptr);
    assert(hashtable.Find(player44.getID()) == nullptr);
    assert(hashtable.Insert(player97.getID(), player97) == SUCCESS);
    assert(hashtable.Remove(player6.getID()) == NOT_FOUND);
    assert(hashtable.Find(player38.getID()) != nullptr);
    assert(hashtable.Insert(player93.getID(), player93) == SUCCESS);
    assert(hashtable.Insert(player35.getID(), player35) == ALREADY_EXIST);
    assert(hashtable.Find(player67.getID()) != nullptr);
    assert(hashtable.Find(player18.getID()) != nullptr);
    assert(hashtable.Remove(player12.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player45.getID(), player45) == SUCCESS);
    assert(hashtable.Insert(player99.getID(), player99) == SUCCESS);
    assert(hashtable.Insert(player10.getID(), player10) == SUCCESS);
    assert(hashtable.Insert(player79.getID(), player79) == SUCCESS);
    assert(hashtable.Insert(player42.getID(), player42) == SUCCESS);
    assert(hashtable.Find(player1.getID()) == nullptr);
    assert(hashtable.Remove(player73.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player10.getID(), player10) == ALREADY_EXIST);
    assert(hashtable.Insert(player53.getID(), player53) == SUCCESS);
    assert(hashtable.Remove(player2.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player73.getID(), player73) == SUCCESS);
    assert(hashtable.Remove(player92.getID()) == NOT_FOUND);
    assert(hashtable.Find(player81.getID()) == nullptr);
    assert(hashtable.Remove(player52.getID()) == NOT_FOUND);
    assert(hashtable.Find(player71.getID()) == nullptr);
    assert(hashtable.Find(player11.getID()) == nullptr);
    assert(hashtable.Insert(player59.getID(), player59) == SUCCESS);
    assert(hashtable.Find(player10.getID()) != nullptr);
    assert(hashtable.Find(player8.getID()) == nullptr);
    assert(hashtable.Insert(player29.getID(), player29) == SUCCESS);
    assert(hashtable.Insert(player63.getID(), player63) == SUCCESS);
    assert(hashtable.Find(player29.getID()) != nullptr);
    assert(hashtable.Insert(player12.getID(), player12) == SUCCESS);
    assert(hashtable.Insert(player84.getID(), player84) == SUCCESS);
    assert(hashtable.Remove(player55.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player39.getID()) == SUCCESS);
    assert(hashtable.Remove(player61.getID()) == SUCCESS);
    assert(hashtable.Insert(player91.getID(), player91) == SUCCESS);
    assert(hashtable.Insert(player20.getID(), player20) == SUCCESS);
    assert(hashtable.Insert(player98.getID(), player98) == SUCCESS);
    assert(hashtable.Remove(player14.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player76.getID(), player76) == SUCCESS);
    assert(hashtable.Insert(player86.getID(), player86) == SUCCESS);
    assert(hashtable.Insert(player37.getID(), player37) == SUCCESS);
    assert(hashtable.Remove(player82.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player97.getID()) == SUCCESS);
    assert(hashtable.Remove(player75.getID()) == NOT_FOUND);
    assert(hashtable.Find(player5.getID()) != nullptr);
    assert(hashtable.Remove(player88.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player12.getID()) == SUCCESS);
    assert(hashtable.Insert(player28.getID(), player28) == SUCCESS);
    assert(hashtable.Insert(player5.getID(), player5) == ALREADY_EXIST);
    assert(hashtable.Insert(player17.getID(), player17) == SUCCESS);
    assert(hashtable.Remove(player62.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player45.getID()) == SUCCESS);
    assert(hashtable.Remove(player82.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player79.getID()) == SUCCESS);
    assert(hashtable.Find(player48.getID()) == nullptr);
    assert(hashtable.Insert(player88.getID(), player88) == SUCCESS);
    assert(hashtable.Remove(player93.getID()) == SUCCESS);
    assert(hashtable.Remove(player5.getID()) == SUCCESS);
    assert(hashtable.Insert(player89.getID(), player89) == SUCCESS);
    assert(hashtable.Remove(player2.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player5.getID(), player5) == SUCCESS);
    assert(hashtable.Find(player93.getID()) == nullptr);
    assert(hashtable.Remove(player98.getID()) == SUCCESS);
    assert(hashtable.Find(player68.getID()) == nullptr);
    assert(hashtable.Insert(player57.getID(), player57) == SUCCESS);
    assert(hashtable.Remove(player40.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player51.getID(), player51) == ALREADY_EXIST);
    assert(hashtable.Remove(player83.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player34.getID(), player34) == SUCCESS);
    assert(hashtable.Insert(player56.getID(), player56) == SUCCESS);
    assert(hashtable.Find(player91.getID()) != nullptr);
    assert(hashtable.Find(player83.getID()) == nullptr);
    assert(hashtable.Remove(player17.getID()) == SUCCESS);
    assert(hashtable.Insert(player12.getID(), player12) == SUCCESS);
    assert(hashtable.Insert(player82.getID(), player82) == SUCCESS);
    assert(hashtable.Insert(player43.getID(), player43) == ALREADY_EXIST);
    assert(hashtable.Insert(player79.getID(), player79) == SUCCESS);
    assert(hashtable.Remove(player43.getID()) == SUCCESS);
    assert(hashtable.Find(player60.getID()) == nullptr);
    assert(hashtable.Insert(player2.getID(), player2) == SUCCESS);
    assert(hashtable.Remove(player98.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player79.getID(), player79) == ALREADY_EXIST);
    assert(hashtable.Find(player26.getID()) == nullptr);
    assert(hashtable.Find(player43.getID()) == nullptr);
    assert(hashtable.Insert(player33.getID(), player33) == SUCCESS);
    assert(hashtable.Find(player62.getID()) == nullptr);
    assert(hashtable.Find(player15.getID()) == nullptr);
    assert(hashtable.Insert(player99.getID(), player99) == ALREADY_EXIST);
    assert(hashtable.Find(player70.getID()) == nullptr);
    assert(hashtable.Remove(player33.getID()) == SUCCESS);
    assert(hashtable.Insert(player49.getID(), player49) == SUCCESS);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Remove(player4.getID()) == SUCCESS);
    assert(hashtable.Insert(player98.getID(), player98) == SUCCESS);
    assert(hashtable.Remove(player93.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player70.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player21.getID()) == NOT_FOUND);
    assert(hashtable.Find(player19.getID()) == nullptr);
    assert(hashtable.Insert(player15.getID(), player15) == SUCCESS);
    assert(hashtable.Find(player40.getID()) == nullptr);
    assert(hashtable.Insert(player65.getID(), player65) == SUCCESS);
    assert(hashtable.Insert(player57.getID(), player57) == ALREADY_EXIST);
    assert(hashtable.Find(player88.getID()) != nullptr);
    assert(hashtable.Insert(player82.getID(), player82) == ALREADY_EXIST);
    assert(hashtable.Insert(player50.getID(), player50) == ALREADY_EXIST);
    assert(hashtable.Insert(player41.getID(), player41) == SUCCESS);
    assert(hashtable.Remove(player34.getID()) == SUCCESS);
    assert(hashtable.Remove(player68.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player72.getID(), player72) == SUCCESS);
    assert(hashtable.Find(player62.getID()) == nullptr);
    assert(hashtable.Find(player85.getID()) == nullptr);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Insert(player45.getID(), player45) == SUCCESS);
    assert(hashtable.Remove(player99.getID()) == SUCCESS);
    assert(hashtable.Remove(player11.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player9.getID(), player9) == SUCCESS);
    assert(hashtable.Remove(player45.getID()) == SUCCESS);
    assert(hashtable.Remove(player8.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player44.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player59.getID(), player59) == ALREADY_EXIST);
    assert(hashtable.Remove(player30.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player51.getID()) == SUCCESS);
    assert(hashtable.Remove(player23.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player66.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player83.getID(), player83) == SUCCESS);
    assert(hashtable.Find(player83.getID()) != nullptr);
    assert(hashtable.Insert(player36.getID(), player36) == SUCCESS);
    assert(hashtable.Remove(player17.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player31.getID()) == NOT_FOUND);
    assert(hashtable.Find(player45.getID()) == nullptr);
    assert(hashtable.Insert(player74.getID(), player74) == SUCCESS);
    assert(hashtable.Insert(player65.getID(), player65) == ALREADY_EXIST);
    assert(hashtable.Find(player97.getID()) == nullptr);
    assert(hashtable.Find(player75.getID()) == nullptr);
    assert(hashtable.Find(player55.getID()) == nullptr);
    assert(hashtable.Remove(player88.getID()) == SUCCESS);
    assert(hashtable.Remove(player64.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player51.getID(), player51) == SUCCESS);
    assert(hashtable.Insert(player24.getID(), player24) == SUCCESS);
    assert(hashtable.Remove(player80.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player85.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player1.getID(), player1) == SUCCESS);
    assert(hashtable.Find(player38.getID()) != nullptr);
    assert(hashtable.Insert(player53.getID(), player53) == ALREADY_EXIST);
    assert(hashtable.Insert(player63.getID(), player63) == ALREADY_EXIST);
    assert(hashtable.Remove(player27.getID()) == NOT_FOUND);
    assert(hashtable.Find(player90.getID()) == nullptr);
    assert(hashtable.Insert(player54.getID(), player54) == SUCCESS);
    assert(hashtable.Remove(player81.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player95.getID()) == SUCCESS);
    assert(hashtable.Find(player29.getID()) != nullptr);
    assert(hashtable.Remove(player65.getID()) == SUCCESS);
    assert(hashtable.Insert(player79.getID(), player79) == ALREADY_EXIST);
    assert(hashtable.Find(player15.getID()) != nullptr);
    assert(hashtable.Remove(player74.getID()) == SUCCESS);
    assert(hashtable.Insert(player42.getID(), player42) == ALREADY_EXIST);
    assert(hashtable.Insert(player84.getID(), player84) == ALREADY_EXIST);
    assert(hashtable.Insert(player84.getID(), player84) == ALREADY_EXIST);
    assert(hashtable.Remove(player53.getID()) == SUCCESS);
    assert(hashtable.Insert(player66.getID(), player66) == SUCCESS);
    assert(hashtable.Remove(player44.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player16.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player95.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player78.getID(), player78) == SUCCESS);
    assert(hashtable.Remove(player85.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player36.getID()) == SUCCESS);
    assert(hashtable.Find(player2.getID()) != nullptr);
    assert(hashtable.Find(player59.getID()) != nullptr);
    assert(hashtable.Insert(player34.getID(), player34) == SUCCESS);
    assert(hashtable.Find(player6.getID()) == nullptr);
    assert(hashtable.Remove(player13.getID()) == NOT_FOUND);
    assert(hashtable.Find(player64.getID()) == nullptr);
    assert(hashtable.Insert(player44.getID(), player44) == SUCCESS);
    assert(hashtable.Insert(player12.getID(), player12) == ALREADY_EXIST);
    assert(hashtable.Remove(player2.getID()) == SUCCESS);
    assert(hashtable.Remove(player4.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player12.getID()) == SUCCESS);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Insert(player98.getID(), player98) == ALREADY_EXIST);
    assert(hashtable.Insert(player13.getID(), player13) == SUCCESS);
    assert(hashtable.Remove(player60.getID()) == NOT_FOUND);
    assert(hashtable.Find(player30.getID()) == nullptr);
    assert(hashtable.Find(player70.getID()) == nullptr);
    assert(hashtable.Find(player71.getID()) == nullptr);
    assert(hashtable.Find(player40.getID()) == nullptr);
    assert(hashtable.Insert(player24.getID(), player24) == ALREADY_EXIST);
    assert(hashtable.Insert(player65.getID(), player65) == SUCCESS);
    assert(hashtable.Insert(player31.getID(), player31) == SUCCESS);
    assert(hashtable.Find(player15.getID()) != nullptr);
    assert(hashtable.Remove(player72.getID()) == SUCCESS);
    assert(hashtable.Find(player80.getID()) == nullptr);
    assert(hashtable.Remove(player48.getID()) == NOT_FOUND);
    assert(hashtable.Find(player52.getID()) == nullptr);
    assert(hashtable.Find(player39.getID()) == nullptr);
    assert(hashtable.Find(player31.getID()) != nullptr);
    assert(hashtable.Insert(player91.getID(), player91) == ALREADY_EXIST);
    assert(hashtable.Insert(player69.getID(), player69) == ALREADY_EXIST);
    assert(hashtable.Remove(player34.getID()) == SUCCESS);
    assert(hashtable.Remove(player56.getID()) == SUCCESS);
    assert(hashtable.Find(player48.getID()) == nullptr);
    assert(hashtable.Insert(player39.getID(), player39) == SUCCESS);
    assert(hashtable.Insert(player4.getID(), player4) == SUCCESS);
    assert(hashtable.Find(player29.getID()) != nullptr);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Insert(player97.getID(), player97) == SUCCESS);
    assert(hashtable.Remove(player42.getID()) == SUCCESS);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Find(player5.getID()) != nullptr);
    assert(hashtable.Insert(player18.getID(), player18) == ALREADY_EXIST);
    assert(hashtable.Insert(player47.getID(), player47) == ALREADY_EXIST);
    assert(hashtable.Find(player93.getID()) == nullptr);
    assert(hashtable.Find(player2.getID()) == nullptr);
    assert(hashtable.Find(player51.getID()) != nullptr);
    assert(hashtable.Remove(player49.getID()) == SUCCESS);
    assert(hashtable.Insert(player83.getID(), player83) == ALREADY_EXIST);
    assert(hashtable.Find(player4.getID()) != nullptr);
    assert(hashtable.Find(player8.getID()) == nullptr);
    assert(hashtable.Remove(player33.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Remove(player57.getID()) == SUCCESS);
    assert(hashtable.Insert(player22.getID(), player22) == SUCCESS);
    assert(hashtable.Remove(player56.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player79.getID()) == SUCCESS);
    assert(hashtable.Insert(player1.getID(), player1) == ALREADY_EXIST);
    assert(hashtable.Find(player98.getID()) != nullptr);
    assert(hashtable.Insert(player46.getID(), player46) == ALREADY_EXIST);
    assert(hashtable.Insert(player42.getID(), player42) == SUCCESS);
    assert(hashtable.Insert(player50.getID(), player50) == ALREADY_EXIST);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Remove(player96.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player26.getID(), player26) == SUCCESS);
    assert(hashtable.Insert(player57.getID(), player57) == SUCCESS);
    assert(hashtable.Remove(player85.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player55.getID(), player55) == SUCCESS);
    assert(hashtable.Remove(player67.getID()) == SUCCESS);
    assert(hashtable.Find(player6.getID()) == nullptr);
    assert(hashtable.Remove(player86.getID()) == SUCCESS);
    assert(hashtable.Find(player85.getID()) == nullptr);
    assert(hashtable.Find(player94.getID()) == nullptr);
    assert(hashtable.Find(player30.getID()) == nullptr);
    assert(hashtable.Remove(player22.getID()) == SUCCESS);
    assert(hashtable.Find(player21.getID()) == nullptr);
    assert(hashtable.Insert(player13.getID(), player13) == ALREADY_EXIST);
    assert(hashtable.Insert(player39.getID(), player39) == ALREADY_EXIST);
    assert(hashtable.Find(player44.getID()) != nullptr);
    assert(hashtable.Find(player16.getID()) == nullptr);
    assert(hashtable.Find(player27.getID()) == nullptr);
    assert(hashtable.Insert(player5.getID(), player5) == ALREADY_EXIST);
    assert(hashtable.Find(player27.getID()) == nullptr);
    assert(hashtable.Remove(player83.getID()) == SUCCESS);
    assert(hashtable.Insert(player55.getID(), player55) == ALREADY_EXIST);
    assert(hashtable.Insert(player54.getID(), player54) == ALREADY_EXIST);
    assert(hashtable.Find(player42.getID()) != nullptr);
    assert(hashtable.Insert(player72.getID(), player72) == SUCCESS);
    assert(hashtable.Find(player45.getID()) == nullptr);
    assert(hashtable.Remove(player55.getID()) == SUCCESS);
    assert(hashtable.Insert(player65.getID(), player65) == ALREADY_EXIST);
    assert(hashtable.Insert(player29.getID(), player29) == ALREADY_EXIST);
    assert(hashtable.Find(player13.getID()) != nullptr);
    assert(hashtable.Remove(player93.getID()) == NOT_FOUND);
    assert(hashtable.Find(player93.getID()) == nullptr);
    assert(hashtable.Remove(player28.getID()) == SUCCESS);
    assert(hashtable.Find(player60.getID()) == nullptr);
    assert(hashtable.Insert(player12.getID(), player12) == SUCCESS);
    assert(hashtable.Remove(player99.getID()) == NOT_FOUND);
    assert(hashtable.Find(player49.getID()) == nullptr);
    assert(hashtable.Insert(player38.getID(), player38) == ALREADY_EXIST);
    assert(hashtable.Find(player21.getID()) == nullptr);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Find(player97.getID()) != nullptr);
    assert(hashtable.Remove(player86.getID()) == NOT_FOUND);
    assert(hashtable.Find(player63.getID()) != nullptr);
    assert(hashtable.Find(player45.getID()) == nullptr);
    assert(hashtable.Remove(player34.getID()) == NOT_FOUND);
    assert(hashtable.Find(player60.getID()) == nullptr);
    assert(hashtable.Find(player6.getID()) == nullptr);
    assert(hashtable.Find(player28.getID()) == nullptr);
    assert(hashtable.Find(player63.getID()) != nullptr);
    assert(hashtable.Insert(player68.getID(), player68) == SUCCESS);
    assert(hashtable.Find(player85.getID()) == nullptr);
    assert(hashtable.Remove(player40.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player22.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player30.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player67.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player62.getID(), player62) == SUCCESS);
    assert(hashtable.Find(player47.getID()) != nullptr);
    assert(hashtable.Find(player36.getID()) == nullptr);
    assert(hashtable.Find(player91.getID()) != nullptr);
    assert(hashtable.Insert(player12.getID(), player12) == ALREADY_EXIST);
    assert(hashtable.Find(player69.getID()) != nullptr);
    assert(hashtable.Insert(player91.getID(), player91) == ALREADY_EXIST);
    assert(hashtable.Insert(player9.getID(), player9) == ALREADY_EXIST);
    assert(hashtable.Find(player48.getID()) == nullptr);
    assert(hashtable.Insert(player83.getID(), player83) == SUCCESS);
    assert(hashtable.Find(player7.getID()) == nullptr);
    assert(hashtable.Remove(player6.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player88.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player8.getID(), player8) == SUCCESS);
    assert(hashtable.Find(player62.getID()) != nullptr);
    assert(hashtable.Remove(player75.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player51.getID()) == SUCCESS);
    assert(hashtable.Remove(player31.getID()) == SUCCESS);
    assert(hashtable.Remove(player33.getID()) == NOT_FOUND);
    assert(hashtable.Find(player44.getID()) != nullptr);
    assert(hashtable.Find(player25.getID()) == nullptr);
    assert(hashtable.Insert(player80.getID(), player80) == SUCCESS);
    assert(hashtable.Find(player3.getID()) == nullptr);
    assert(hashtable.Find(player93.getID()) == nullptr);
    assert(hashtable.Remove(player36.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player84.getID()) == SUCCESS);
    assert(hashtable.Remove(player25.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player11.getID(), player11) == SUCCESS);
    assert(hashtable.Insert(player40.getID(), player40) == SUCCESS);
    assert(hashtable.Insert(player68.getID(), player68) == ALREADY_EXIST);
    assert(hashtable.Find(player7.getID()) == nullptr);
    assert(hashtable.Remove(player33.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player44.getID()) == SUCCESS);
    assert(hashtable.Remove(player97.getID()) == SUCCESS);
    assert(hashtable.Insert(player57.getID(), player57) == ALREADY_EXIST);
    assert(hashtable.Insert(player7.getID(), player7) == SUCCESS);
    assert(hashtable.Remove(player16.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player88.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player35.getID()) == SUCCESS);
    assert(hashtable.Insert(player59.getID(), player59) == ALREADY_EXIST);
    assert(hashtable.Find(player11.getID()) != nullptr);
    assert(hashtable.Find(player95.getID()) == nullptr);
    assert(hashtable.Remove(player91.getID()) == SUCCESS);
    assert(hashtable.Remove(player34.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player55.getID(), player55) == SUCCESS);
    assert(hashtable.Insert(player76.getID(), player76) == ALREADY_EXIST);
    assert(hashtable.Insert(player17.getID(), player17) == SUCCESS);
    assert(hashtable.Insert(player93.getID(), player93) == SUCCESS);
    assert(hashtable.Find(player20.getID()) != nullptr);
    assert(hashtable.Insert(player22.getID(), player22) == SUCCESS);
    assert(hashtable.Find(player65.getID()) != nullptr);
    assert(hashtable.Remove(player6.getID()) == NOT_FOUND);
    assert(hashtable.Find(player27.getID()) == nullptr);
    assert(hashtable.Find(player87.getID()) != nullptr);
    assert(hashtable.Find(player24.getID()) != nullptr);
    assert(hashtable.Remove(player78.getID()) == SUCCESS);
    assert(hashtable.Remove(player70.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player53.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player45.getID()) == NOT_FOUND);
    assert(hashtable.Find(player27.getID()) == nullptr);
    assert(hashtable.Find(player21.getID()) == nullptr);
    assert(hashtable.Insert(player7.getID(), player7) == ALREADY_EXIST);
    assert(hashtable.Remove(player16.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player60.getID(), player60) == SUCCESS);
    assert(hashtable.Find(player84.getID()) == nullptr);
    assert(hashtable.Find(player13.getID()) != nullptr);
    assert(hashtable.Find(player51.getID()) == nullptr);
    assert(hashtable.Find(player6.getID()) == nullptr);
    assert(hashtable.Remove(player32.getID()) == SUCCESS);
    assert(hashtable.Remove(player8.getID()) == SUCCESS);
    assert(hashtable.Remove(player16.getID()) == NOT_FOUND);
    assert(hashtable.Find(player16.getID()) == nullptr);
    assert(hashtable.Insert(player81.getID(), player81) == SUCCESS);
    assert(hashtable.Find(player29.getID()) != nullptr);
    assert(hashtable.Find(player97.getID()) == nullptr);
    assert(hashtable.Insert(player42.getID(), player42) == ALREADY_EXIST);
    assert(hashtable.Remove(player26.getID()) == SUCCESS);
    assert(hashtable.Find(player78.getID()) == nullptr);
    assert(hashtable.Find(player29.getID()) != nullptr);
    assert(hashtable.Remove(player65.getID()) == SUCCESS);
    assert(hashtable.Insert(player35.getID(), player35) == SUCCESS);
    assert(hashtable.Find(player48.getID()) == nullptr);
    assert(hashtable.Remove(player31.getID()) == NOT_FOUND);
    assert(hashtable.Find(player52.getID()) == nullptr);
    assert(hashtable.Remove(player8.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player63.getID()) == SUCCESS);
    assert(hashtable.Find(player25.getID()) == nullptr);
    assert(hashtable.Find(player45.getID()) == nullptr);
    assert(hashtable.Find(player58.getID()) == nullptr);
    assert(hashtable.Insert(player16.getID(), player16) == SUCCESS);
    assert(hashtable.Remove(player41.getID()) == SUCCESS);
    assert(hashtable.Insert(player37.getID(), player37) == ALREADY_EXIST);
    assert(hashtable.Remove(player27.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Find(player56.getID()) == nullptr);
    assert(hashtable.Insert(player74.getID(), player74) == SUCCESS);
    assert(hashtable.Find(player99.getID()) == nullptr);
    assert(hashtable.Insert(player25.getID(), player25) == SUCCESS);
    assert(hashtable.Find(player71.getID()) == nullptr);
    assert(hashtable.Remove(player58.getID()) == NOT_FOUND);
    assert(hashtable.Find(player72.getID()) != nullptr);
    assert(hashtable.Find(player28.getID()) == nullptr);
    assert(hashtable.Remove(player1.getID()) == SUCCESS);
    assert(hashtable.Insert(player16.getID(), player16) == ALREADY_EXIST);
    assert(hashtable.Insert(player44.getID(), player44) == SUCCESS);
    assert(hashtable.Find(player74.getID()) != nullptr);
    assert(hashtable.Find(player57.getID()) != nullptr);
    assert(hashtable.Remove(player87.getID()) == SUCCESS);
    assert(hashtable.Remove(player49.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player40.getID()) == SUCCESS);
    assert(hashtable.Remove(player54.getID()) == SUCCESS);
    assert(hashtable.Insert(player53.getID(), player53) == SUCCESS);
    assert(hashtable.Remove(player46.getID()) == SUCCESS);
    assert(hashtable.Insert(player34.getID(), player34) == SUCCESS);
    assert(hashtable.Insert(player28.getID(), player28) == SUCCESS);
    assert(hashtable.Remove(player63.getID()) == NOT_FOUND);
    assert(hashtable.Find(player22.getID()) != nullptr);
    assert(hashtable.Insert(player57.getID(), player57) == ALREADY_EXIST);
    assert(hashtable.Find(player16.getID()) != nullptr);
    assert(hashtable.Find(player68.getID()) != nullptr);
    assert(hashtable.Remove(player10.getID()) == SUCCESS);
    assert(hashtable.Insert(player61.getID(), player61) == SUCCESS);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Remove(player93.getID()) == SUCCESS);
    assert(hashtable.Find(player58.getID()) == nullptr);
    assert(hashtable.Insert(player71.getID(), player71) == SUCCESS);
    assert(hashtable.Remove(player4.getID()) == SUCCESS);
    assert(hashtable.Remove(player18.getID()) == SUCCESS);
    assert(hashtable.Insert(player28.getID(), player28) == ALREADY_EXIST);
    assert(hashtable.Insert(player39.getID(), player39) == ALREADY_EXIST);
    assert(hashtable.Insert(player39.getID(), player39) == ALREADY_EXIST);
    assert(hashtable.Insert(player17.getID(), player17) == ALREADY_EXIST);
    assert(hashtable.Insert(player41.getID(), player41) == SUCCESS);
    assert(hashtable.Find(player46.getID()) == nullptr);
    assert(hashtable.Insert(player24.getID(), player24) == ALREADY_EXIST);
    assert(hashtable.Insert(player97.getID(), player97) == SUCCESS);
    assert(hashtable.Insert(player66.getID(), player66) == ALREADY_EXIST);
    assert(hashtable.Find(player39.getID()) != nullptr);
    assert(hashtable.Remove(player96.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player99.getID()) == NOT_FOUND);
    assert(hashtable.Find(player97.getID()) != nullptr);
    assert(hashtable.Insert(player98.getID(), player98) == ALREADY_EXIST);
    assert(hashtable.Remove(player9.getID()) == SUCCESS);
    assert(hashtable.Find(player39.getID()) != nullptr);
    assert(hashtable.Find(player12.getID()) != nullptr);
    assert(hashtable.Remove(player58.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player19.getID(), player19) == SUCCESS);
    assert(hashtable.Find(player21.getID()) == nullptr);
    assert(hashtable.Remove(player64.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player43.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player71.getID()) == SUCCESS);
    assert(hashtable.Insert(player65.getID(), player65) == SUCCESS);
    assert(hashtable.Insert(player16.getID(), player16) == ALREADY_EXIST);
    assert(hashtable.Insert(player33.getID(), player33) == SUCCESS);
    assert(hashtable.Remove(player44.getID()) == SUCCESS);
    assert(hashtable.Remove(player32.getID()) == NOT_FOUND);
    assert(hashtable.Find(player51.getID()) == nullptr);
    assert(hashtable.Remove(player70.getID()) == NOT_FOUND);
    assert(hashtable.Find(player19.getID()) != nullptr);
    assert(hashtable.Remove(player65.getID()) == SUCCESS);
    assert(hashtable.Insert(player42.getID(), player42) == ALREADY_EXIST);
    assert(hashtable.Find(player55.getID()) != nullptr);
    assert(hashtable.Insert(player56.getID(), player56) == SUCCESS);
    assert(hashtable.Insert(player71.getID(), player71) == SUCCESS);
    assert(hashtable.Find(player54.getID()) == nullptr);
    assert(hashtable.Insert(player97.getID(), player97) == ALREADY_EXIST);
    assert(hashtable.Insert(player74.getID(), player74) == ALREADY_EXIST);
    assert(hashtable.Remove(player25.getID()) == SUCCESS);
    assert(hashtable.Insert(player10.getID(), player10) == SUCCESS);
    assert(hashtable.Find(player59.getID()) != nullptr);
    assert(hashtable.Insert(player89.getID(), player89) == ALREADY_EXIST);
    assert(hashtable.Find(player91.getID()) == nullptr);
    assert(hashtable.Find(player30.getID()) == nullptr);
    assert(hashtable.Find(player55.getID()) != nullptr);
    assert(hashtable.Remove(player37.getID()) == SUCCESS);
    assert(hashtable.Find(player13.getID()) != nullptr);
    assert(hashtable.Find(player61.getID()) != nullptr);
    assert(hashtable.Insert(player75.getID(), player75) == SUCCESS);
    assert(hashtable.Insert(player45.getID(), player45) == SUCCESS);
    assert(hashtable.Find(player56.getID()) != nullptr);
    assert(hashtable.Remove(player34.getID()) == SUCCESS);
    assert(hashtable.Find(player18.getID()) == nullptr);
    assert(hashtable.Find(player98.getID()) != nullptr);
    assert(hashtable.Find(player30.getID()) == nullptr);
    assert(hashtable.Find(player13.getID()) != nullptr);
    assert(hashtable.Find(player30.getID()) == nullptr);
    assert(hashtable.Find(player5.getID()) != nullptr);
    assert(hashtable.Insert(player50.getID(), player50) == ALREADY_EXIST);
    assert(hashtable.Find(player46.getID()) == nullptr);
    assert(hashtable.Insert(player95.getID(), player95) == SUCCESS);
    assert(hashtable.Insert(player86.getID(), player86) == SUCCESS);
    assert(hashtable.Find(player72.getID()) != nullptr);
    assert(hashtable.Remove(player33.getID()) == SUCCESS);
    assert(hashtable.Remove(player35.getID()) == SUCCESS);
    assert(hashtable.Remove(player12.getID()) == SUCCESS);
    assert(hashtable.Find(player7.getID()) != nullptr);
    assert(hashtable.Remove(player41.getID()) == SUCCESS);
    assert(hashtable.Remove(player85.getID()) == NOT_FOUND);
    assert(hashtable.Find(player37.getID()) == nullptr);
    assert(hashtable.Find(player98.getID()) != nullptr);
    assert(hashtable.Find(player96.getID()) == nullptr);
    assert(hashtable.Remove(player81.getID()) == SUCCESS);
    assert(hashtable.Find(player10.getID()) != nullptr);
    assert(hashtable.Remove(player53.getID()) == SUCCESS);
    assert(hashtable.Insert(player44.getID(), player44) == SUCCESS);
    assert(hashtable.Find(player45.getID()) != nullptr);
    assert(hashtable.Insert(player89.getID(), player89) == ALREADY_EXIST);
    assert(hashtable.Remove(player75.getID()) == SUCCESS);
    assert(hashtable.Insert(player37.getID(), player37) == SUCCESS);
    assert(hashtable.Find(player36.getID()) == nullptr);
    assert(hashtable.Find(player45.getID()) != nullptr);
    assert(hashtable.Remove(player1.getID()) == NOT_FOUND);
    assert(hashtable.Find(player17.getID()) != nullptr);
    assert(hashtable.Insert(player56.getID(), player56) == ALREADY_EXIST);
    assert(hashtable.Find(player79.getID()) == nullptr);
    assert(hashtable.Insert(player86.getID(), player86) == ALREADY_EXIST);
    assert(hashtable.Remove(player66.getID()) == SUCCESS);
    assert(hashtable.Find(player40.getID()) == nullptr);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Find(player21.getID()) == nullptr);
    assert(hashtable.Insert(player13.getID(), player13) == ALREADY_EXIST);
    assert(hashtable.Find(player27.getID()) == nullptr);
    assert(hashtable.Remove(player6.getID()) == NOT_FOUND);
    assert(hashtable.Find(player46.getID()) == nullptr);
    assert(hashtable.Insert(player10.getID(), player10) == ALREADY_EXIST);
    assert(hashtable.Insert(player92.getID(), player92) == SUCCESS);
    assert(hashtable.Find(player91.getID()) == nullptr);
    assert(hashtable.Insert(player4.getID(), player4) == SUCCESS);
    assert(hashtable.Insert(player70.getID(), player70) == SUCCESS);
    assert(hashtable.Insert(player33.getID(), player33) == SUCCESS);
    assert(hashtable.Remove(player19.getID()) == SUCCESS);
    assert(hashtable.Remove(player28.getID()) == SUCCESS);
    assert(hashtable.Find(player85.getID()) == nullptr);
    assert(hashtable.Find(player78.getID()) == nullptr);
    assert(hashtable.Remove(player42.getID()) == SUCCESS);
    assert(hashtable.Insert(player98.getID(), player98) == ALREADY_EXIST);
    assert(hashtable.Insert(player41.getID(), player41) == SUCCESS);
    assert(hashtable.Find(player65.getID()) == nullptr);
    assert(hashtable.Insert(player90.getID(), player90) == SUCCESS);
    assert(hashtable.Insert(player40.getID(), player40) == SUCCESS);
    assert(hashtable.Find(player44.getID()) != nullptr);
    assert(hashtable.Find(player34.getID()) == nullptr);
    assert(hashtable.Find(player65.getID()) == nullptr);
    assert(hashtable.Insert(player50.getID(), player50) == ALREADY_EXIST);
    assert(hashtable.Remove(player39.getID()) == SUCCESS);
    assert(hashtable.Remove(player83.getID()) == SUCCESS);
    assert(hashtable.Insert(player4.getID(), player4) == ALREADY_EXIST);
    assert(hashtable.Remove(player31.getID()) == NOT_FOUND);
    assert(hashtable.Find(player80.getID()) != nullptr);
    assert(hashtable.Find(player9.getID()) == nullptr);
    assert(hashtable.Insert(player38.getID(), player38) == ALREADY_EXIST);
    assert(hashtable.Insert(player30.getID(), player30) == SUCCESS);
    assert(hashtable.Remove(player84.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player38.getID(), player38) == ALREADY_EXIST);
    assert(hashtable.Insert(player17.getID(), player17) == ALREADY_EXIST);
    assert(hashtable.Remove(player51.getID()) == NOT_FOUND);
    assert(hashtable.Find(player78.getID()) == nullptr);
    assert(hashtable.Remove(player57.getID()) == SUCCESS);
    assert(hashtable.Remove(player13.getID()) == SUCCESS);
    assert(hashtable.Insert(player17.getID(), player17) == ALREADY_EXIST);
    assert(hashtable.Remove(player34.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player66.getID(), player66) == SUCCESS);
    assert(hashtable.Find(player23.getID()) == nullptr);
    assert(hashtable.Find(player33.getID()) != nullptr);
    assert(hashtable.Find(player70.getID()) != nullptr);
    assert(hashtable.Remove(player84.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player68.getID(), player68) == ALREADY_EXIST);
    assert(hashtable.Remove(player50.getID()) == SUCCESS);
    assert(hashtable.Find(player86.getID()) != nullptr);
    assert(hashtable.Insert(player83.getID(), player83) == SUCCESS);
    assert(hashtable.Find(player19.getID()) == nullptr);
    assert(hashtable.Find(player67.getID()) == nullptr);
    assert(hashtable.Insert(player67.getID(), player67) == SUCCESS);
    assert(hashtable.Find(player84.getID()) == nullptr);
    assert(hashtable.Remove(player66.getID()) == SUCCESS);
    assert(hashtable.Find(player2.getID()) == nullptr);
    assert(hashtable.Remove(player3.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player25.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player31.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player72.getID()) == SUCCESS);
    assert(hashtable.Insert(player31.getID(), player31) == SUCCESS);
    assert(hashtable.Remove(player97.getID()) == SUCCESS);
    assert(hashtable.Insert(player99.getID(), player99) == SUCCESS);
    assert(hashtable.Find(player58.getID()) == nullptr);
    assert(hashtable.Remove(player83.getID()) == SUCCESS);
    assert(hashtable.Insert(player21.getID(), player21) == SUCCESS);
    assert(hashtable.Remove(player52.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player77.getID()) == NOT_FOUND);
    assert(hashtable.Find(player89.getID()) != nullptr);
    assert(hashtable.Find(player21.getID()) != nullptr);
    assert(hashtable.Insert(player95.getID(), player95) == ALREADY_EXIST);
    assert(hashtable.Find(player20.getID()) != nullptr);
    assert(hashtable.Remove(player28.getID()) == NOT_FOUND);
    assert(hashtable.Find(player79.getID()) == nullptr);
    assert(hashtable.Find(player85.getID()) == nullptr);
    assert(hashtable.Insert(player63.getID(), player63) == SUCCESS);
    assert(hashtable.Remove(player88.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player3.getID()) == NOT_FOUND);
    assert(hashtable.Find(player81.getID()) == nullptr);
    assert(hashtable.Find(player58.getID()) == nullptr);
    assert(hashtable.Find(player65.getID()) == nullptr);
    assert(hashtable.Insert(player1.getID(), player1) == SUCCESS);
    assert(hashtable.Find(player58.getID()) == nullptr);
    assert(hashtable.Find(player89.getID()) != nullptr);
    assert(hashtable.Insert(player86.getID(), player86) == ALREADY_EXIST);
    assert(hashtable.Insert(player3.getID(), player3) == SUCCESS);
    assert(hashtable.Remove(player4.getID()) == SUCCESS);
    assert(hashtable.Remove(player84.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player52.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player24.getID()) == SUCCESS);
    assert(hashtable.Remove(player57.getID()) == NOT_FOUND);
    assert(hashtable.Find(player84.getID()) == nullptr);
    assert(hashtable.Find(player54.getID()) == nullptr);
    assert(hashtable.Find(player83.getID()) == nullptr);
    assert(hashtable.Insert(player35.getID(), player35) == SUCCESS);
    assert(hashtable.Find(player39.getID()) == nullptr);
    assert(hashtable.Find(player87.getID()) == nullptr);
    assert(hashtable.Find(player97.getID()) == nullptr);
    assert(hashtable.Insert(player6.getID(), player6) == SUCCESS);
    assert(hashtable.Insert(player73.getID(), player73) == ALREADY_EXIST);
    assert(hashtable.Remove(player64.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player93.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player42.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player81.getID(), player81) == SUCCESS);
    assert(hashtable.Insert(player59.getID(), player59) == ALREADY_EXIST);
    assert(hashtable.Remove(player59.getID()) == SUCCESS);
    assert(hashtable.Find(player50.getID()) == nullptr);
    assert(hashtable.Find(player47.getID()) != nullptr);
    assert(hashtable.Find(player46.getID()) == nullptr);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Remove(player19.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player81.getID()) == SUCCESS);
    assert(hashtable.Remove(player32.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player72.getID()) == NOT_FOUND);
    assert(hashtable.Find(player35.getID()) != nullptr);
    assert(hashtable.Find(player95.getID()) != nullptr);
    assert(hashtable.Insert(player41.getID(), player41) == ALREADY_EXIST);
    assert(hashtable.Insert(player85.getID(), player85) == SUCCESS);
    assert(hashtable.Find(player95.getID()) != nullptr);
    assert(hashtable.Remove(player6.getID()) == SUCCESS);
    assert(hashtable.Find(player10.getID()) != nullptr);
    assert(hashtable.Remove(player56.getID()) == SUCCESS);
    assert(hashtable.Find(player17.getID()) != nullptr);
    assert(hashtable.Remove(player55.getID()) == SUCCESS);
    assert(hashtable.Remove(player81.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player1.getID()) == SUCCESS);
    assert(hashtable.Remove(player95.getID()) == SUCCESS);
    assert(hashtable.Remove(player84.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player53.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player38.getID()) == SUCCESS);
    assert(hashtable.Insert(player51.getID(), player51) == SUCCESS);
    assert(hashtable.Insert(player15.getID(), player15) == ALREADY_EXIST);
    assert(hashtable.Insert(player85.getID(), player85) == ALREADY_EXIST);
    assert(hashtable.Remove(player19.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player12.getID(), player12) == SUCCESS);
    assert(hashtable.Remove(player91.getID()) == NOT_FOUND);
    assert(hashtable.Find(player16.getID()) != nullptr);
    assert(hashtable.Find(player28.getID()) == nullptr);
    assert(hashtable.Remove(player86.getID()) == SUCCESS);
    assert(hashtable.Remove(player30.getID()) == SUCCESS);
    assert(hashtable.Find(player37.getID()) != nullptr);
    assert(hashtable.Remove(player74.getID()) == SUCCESS);
    assert(hashtable.Remove(player8.getID()) == NOT_FOUND);
    assert(hashtable.Find(player25.getID()) == nullptr);
    assert(hashtable.Find(player55.getID()) == nullptr);
    assert(hashtable.Remove(player74.getID()) == NOT_FOUND);
    assert(hashtable.Find(player68.getID()) != nullptr);
    assert(hashtable.Remove(player67.getID()) == SUCCESS);
    assert(hashtable.Remove(player84.getID()) == NOT_FOUND);
    assert(hashtable.Find(player33.getID()) != nullptr);
    assert(hashtable.Find(player21.getID()) != nullptr);
    assert(hashtable.Remove(player19.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player41.getID(), player41) == ALREADY_EXIST);
    assert(hashtable.Insert(player81.getID(), player81) == SUCCESS);
    assert(hashtable.Remove(player77.getID()) == NOT_FOUND);
    assert(hashtable.Find(player52.getID()) == nullptr);
    assert(hashtable.Find(player53.getID()) == nullptr);
    assert(hashtable.Insert(player40.getID(), player40) == ALREADY_EXIST);
    assert(hashtable.Insert(player92.getID(), player92) == ALREADY_EXIST);
    assert(hashtable.Remove(player3.getID()) == SUCCESS);
    assert(hashtable.Find(player81.getID()) != nullptr);
    assert(hashtable.Find(player90.getID()) != nullptr);
    assert(hashtable.Remove(player28.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player38.getID()) == NOT_FOUND);
    assert(hashtable.Find(player18.getID()) == nullptr);
    assert(hashtable.Insert(player18.getID(), player18) == SUCCESS);
    assert(hashtable.Remove(player3.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player29.getID()) == SUCCESS);
    assert(hashtable.Remove(player62.getID()) == SUCCESS);
    assert(hashtable.Insert(player28.getID(), player28) == SUCCESS);
    assert(hashtable.Find(player36.getID()) == nullptr);
    assert(hashtable.Remove(player43.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player38.getID(), player38) == SUCCESS);
    assert(hashtable.Remove(player13.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player20.getID()) == SUCCESS);
    assert(hashtable.Find(player11.getID()) != nullptr);
    assert(hashtable.Find(player63.getID()) != nullptr);
    assert(hashtable.Insert(player25.getID(), player25) == SUCCESS);
    assert(hashtable.Find(player28.getID()) != nullptr);
    assert(hashtable.Find(player15.getID()) != nullptr);
    assert(hashtable.Insert(player65.getID(), player65) == SUCCESS);
    assert(hashtable.Find(player9.getID()) == nullptr);
    assert(hashtable.Insert(player67.getID(), player67) == SUCCESS);
    assert(hashtable.Remove(player88.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player16.getID()) == SUCCESS);
    assert(hashtable.Remove(player11.getID()) == SUCCESS);
    assert(hashtable.Insert(player89.getID(), player89) == ALREADY_EXIST);
    assert(hashtable.Insert(player45.getID(), player45) == ALREADY_EXIST);
    assert(hashtable.Find(player89.getID()) != nullptr);
    assert(hashtable.Insert(player57.getID(), player57) == SUCCESS);
    assert(hashtable.Find(player51.getID()) != nullptr);
    assert(hashtable.Insert(player12.getID(), player12) == ALREADY_EXIST);
    assert(hashtable.Insert(player25.getID(), player25) == ALREADY_EXIST);
    assert(hashtable.Insert(player99.getID(), player99) == ALREADY_EXIST);
    assert(hashtable.Insert(player57.getID(), player57) == ALREADY_EXIST);
    assert(hashtable.Remove(player71.getID()) == SUCCESS);
    assert(hashtable.Find(player44.getID()) != nullptr);
    assert(hashtable.Insert(player51.getID(), player51) == ALREADY_EXIST);
    assert(hashtable.Find(player98.getID()) != nullptr);
    assert(hashtable.Remove(player17.getID()) == SUCCESS);
    assert(hashtable.Remove(player44.getID()) == SUCCESS);
    assert(hashtable.Find(player63.getID()) != nullptr);
    assert(hashtable.Insert(player32.getID(), player32) == SUCCESS);
    assert(hashtable.Insert(player67.getID(), player67) == ALREADY_EXIST);
    assert(hashtable.Find(player11.getID()) == nullptr);
    assert(hashtable.Find(player24.getID()) == nullptr);
    assert(hashtable.Insert(player95.getID(), player95) == SUCCESS);
    assert(hashtable.Insert(player76.getID(), player76) == ALREADY_EXIST);
    assert(hashtable.Remove(player76.getID()) == SUCCESS);
    assert(hashtable.Insert(player98.getID(), player98) == ALREADY_EXIST);
    assert(hashtable.Insert(player14.getID(), player14) == SUCCESS);
    assert(hashtable.Insert(player6.getID(), player6) == SUCCESS);
    assert(hashtable.Remove(player62.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player49.getID(), player49) == SUCCESS);
    assert(hashtable.Insert(player41.getID(), player41) == ALREADY_EXIST);
    assert(hashtable.Find(player85.getID()) != nullptr);
    assert(hashtable.Remove(player73.getID()) == SUCCESS);
    assert(hashtable.Find(player4.getID()) == nullptr);
    assert(hashtable.Find(player53.getID()) == nullptr);
    assert(hashtable.Insert(player52.getID(), player52) == SUCCESS);
    assert(hashtable.Find(player87.getID()) == nullptr);
    assert(hashtable.Insert(player76.getID(), player76) == SUCCESS);
    assert(hashtable.Find(player54.getID()) == nullptr);
    assert(hashtable.Remove(player6.getID()) == SUCCESS);
    assert(hashtable.Find(player65.getID()) != nullptr);
    assert(hashtable.Remove(player77.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player34.getID(), player34) == SUCCESS);
    assert(hashtable.Find(player44.getID()) == nullptr);
    assert(hashtable.Remove(player75.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player93.getID(), player93) == SUCCESS);
    assert(hashtable.Insert(player4.getID(), player4) == SUCCESS);
    assert(hashtable.Find(player13.getID()) == nullptr);
    assert(hashtable.Insert(player7.getID(), player7) == ALREADY_EXIST);
    assert(hashtable.Insert(player14.getID(), player14) == ALREADY_EXIST);
    assert(hashtable.Insert(player25.getID(), player25) == ALREADY_EXIST);
    assert(hashtable.Remove(player8.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player14.getID(), player14) == ALREADY_EXIST);
    assert(hashtable.Find(player96.getID()) == nullptr);
    assert(hashtable.Find(player38.getID()) != nullptr);
    assert(hashtable.Remove(player44.getID()) == NOT_FOUND);
    assert(hashtable.Find(player28.getID()) != nullptr);
    assert(hashtable.Insert(player61.getID(), player61) == ALREADY_EXIST);
    assert(hashtable.Insert(player86.getID(), player86) == SUCCESS);
    assert(hashtable.Remove(player53.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player54.getID()) == NOT_FOUND);
    assert(hashtable.Find(player87.getID()) == nullptr);
    assert(hashtable.Remove(player9.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player50.getID()) == NOT_FOUND);
    assert(hashtable.Find(player29.getID()) == nullptr);
    assert(hashtable.Find(player68.getID()) != nullptr);
    assert(hashtable.Insert(player72.getID(), player72) == SUCCESS);
    assert(hashtable.Insert(player84.getID(), player84) == SUCCESS);
    assert(hashtable.Remove(player6.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player9.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player17.getID(), player17) == SUCCESS);
    assert(hashtable.Remove(player27.getID()) == NOT_FOUND);
    assert(hashtable.Find(player64.getID()) == nullptr);
    assert(hashtable.Remove(player59.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player29.getID()) == NOT_FOUND);
    assert(hashtable.Find(player36.getID()) == nullptr);
    assert(hashtable.Insert(player33.getID(), player33) == ALREADY_EXIST);
    assert(hashtable.Remove(player49.getID()) == SUCCESS);
    assert(hashtable.Insert(player44.getID(), player44) == SUCCESS);
    assert(hashtable.Remove(player25.getID()) == SUCCESS);
    assert(hashtable.Remove(player95.getID()) == SUCCESS);
    assert(hashtable.Insert(player31.getID(), player31) == ALREADY_EXIST);
    assert(hashtable.Insert(player26.getID(), player26) == SUCCESS);
    assert(hashtable.Find(player96.getID()) == nullptr);
    assert(hashtable.Insert(player79.getID(), player79) == SUCCESS);
    assert(hashtable.Remove(player50.getID()) == NOT_FOUND);
    assert(hashtable.Find(player23.getID()) == nullptr);
    assert(hashtable.Find(player41.getID()) != nullptr);
    assert(hashtable.Insert(player21.getID(), player21) == ALREADY_EXIST);
    assert(hashtable.Find(player41.getID()) != nullptr);
    assert(hashtable.Insert(player94.getID(), player94) == SUCCESS);
    assert(hashtable.Insert(player78.getID(), player78) == SUCCESS);
    assert(hashtable.Insert(player13.getID(), player13) == SUCCESS);
    assert(hashtable.Remove(player59.getID()) == NOT_FOUND);
    assert(hashtable.Find(player14.getID()) != nullptr);
    assert(hashtable.Insert(player55.getID(), player55) == SUCCESS);
    assert(hashtable.Remove(player37.getID()) == SUCCESS);
    assert(hashtable.Insert(player88.getID(), player88) == SUCCESS);
    assert(hashtable.Find(player17.getID()) != nullptr);
    assert(hashtable.Insert(player62.getID(), player62) == SUCCESS);
    assert(hashtable.Insert(player59.getID(), player59) == SUCCESS);
    assert(hashtable.Insert(player39.getID(), player39) == SUCCESS);
    assert(hashtable.Find(player2.getID()) == nullptr);
    assert(hashtable.Remove(player82.getID()) == SUCCESS);
    assert(hashtable.Remove(player90.getID()) == SUCCESS);
    assert(hashtable.Find(player63.getID()) != nullptr);
    assert(hashtable.Find(player4.getID()) != nullptr);
    assert(hashtable.Remove(player9.getID()) == NOT_FOUND);
    assert(hashtable.Find(player67.getID()) != nullptr);
    assert(hashtable.Insert(player56.getID(), player56) == SUCCESS);
    assert(hashtable.Insert(player78.getID(), player78) == ALREADY_EXIST);
    assert(hashtable.Insert(player63.getID(), player63) == ALREADY_EXIST);
    assert(hashtable.Remove(player4.getID()) == SUCCESS);
    assert(hashtable.Insert(player9.getID(), player9) == SUCCESS);
    assert(hashtable.Remove(player21.getID()) == SUCCESS);
    assert(hashtable.Insert(player43.getID(), player43) == SUCCESS);
    assert(hashtable.Find(player79.getID()) != nullptr);
    assert(hashtable.Find(player11.getID()) == nullptr);
    assert(hashtable.Insert(player58.getID(), player58) == SUCCESS);
    assert(hashtable.Find(player50.getID()) == nullptr);
    assert(hashtable.Insert(player56.getID(), player56) == ALREADY_EXIST);
    assert(hashtable.Find(player16.getID()) == nullptr);
    assert(hashtable.Remove(player10.getID()) == SUCCESS);
    assert(hashtable.Remove(player95.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player48.getID(), player48) == SUCCESS);
    assert(hashtable.Insert(player5.getID(), player5) == ALREADY_EXIST);
    assert(hashtable.Insert(player58.getID(), player58) == ALREADY_EXIST);
    assert(hashtable.Insert(player18.getID(), player18) == ALREADY_EXIST);
    assert(hashtable.Insert(player13.getID(), player13) == ALREADY_EXIST);
    assert(hashtable.Insert(player80.getID(), player80) == ALREADY_EXIST);
    assert(hashtable.Find(player36.getID()) == nullptr);
    assert(hashtable.Remove(player13.getID()) == SUCCESS);
    assert(hashtable.Remove(player83.getID()) == NOT_FOUND);
    assert(hashtable.Find(player7.getID()) != nullptr);
    assert(hashtable.Find(player77.getID()) == nullptr);
    assert(hashtable.Remove(player25.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player9.getID(), player9) == ALREADY_EXIST);
    assert(hashtable.Remove(player20.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player60.getID()) == SUCCESS);
    assert(hashtable.Remove(player46.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player82.getID(), player82) == SUCCESS);
    assert(hashtable.Remove(player43.getID()) == SUCCESS);
    assert(hashtable.Remove(player87.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player61.getID(), player61) == ALREADY_EXIST);
    assert(hashtable.Remove(player12.getID()) == SUCCESS);
    assert(hashtable.Remove(player39.getID()) == SUCCESS);
    assert(hashtable.Insert(player1.getID(), player1) == SUCCESS);
    assert(hashtable.Remove(player97.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player26.getID()) == SUCCESS);
    assert(hashtable.Remove(player61.getID()) == SUCCESS);
    assert(hashtable.Insert(player41.getID(), player41) == ALREADY_EXIST);
    assert(hashtable.Remove(player57.getID()) == SUCCESS);
    assert(hashtable.Find(player94.getID()) != nullptr);
    assert(hashtable.Remove(player60.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player57.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player30.getID(), player30) == SUCCESS);
    assert(hashtable.Remove(player76.getID()) == SUCCESS);
    assert(hashtable.Insert(player45.getID(), player45) == ALREADY_EXIST);
    assert(hashtable.Remove(player37.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player75.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player5.getID(), player5) == ALREADY_EXIST);
    assert(hashtable.Insert(player73.getID(), player73) == SUCCESS);
    assert(hashtable.Remove(player4.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player75.getID(), player75) == SUCCESS);
    assert(hashtable.Insert(player96.getID(), player96) == SUCCESS);
    assert(hashtable.Insert(player92.getID(), player92) == ALREADY_EXIST);
    assert(hashtable.Insert(player49.getID(), player49) == SUCCESS);
    assert(hashtable.Remove(player13.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player41.getID(), player41) == ALREADY_EXIST);
    assert(hashtable.Insert(player53.getID(), player53) == SUCCESS);
    assert(hashtable.Find(player22.getID()) != nullptr);
    assert(hashtable.Remove(player55.getID()) == SUCCESS);
    assert(hashtable.Find(player48.getID()) != nullptr);
    assert(hashtable.Remove(player32.getID()) == SUCCESS);
    assert(hashtable.Find(player61.getID()) == nullptr);
    assert(hashtable.Remove(player48.getID()) == SUCCESS);
    assert(hashtable.Insert(player32.getID(), player32) == SUCCESS);
    assert(hashtable.Remove(player78.getID()) == SUCCESS);
    assert(hashtable.Insert(player22.getID(), player22) == ALREADY_EXIST);
    assert(hashtable.Find(player59.getID()) != nullptr);
    assert(hashtable.Remove(player71.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player54.getID()) == NOT_FOUND);
    assert(hashtable.Find(player28.getID()) != nullptr);
    assert(hashtable.Find(player39.getID()) == nullptr);
    assert(hashtable.Insert(player46.getID(), player46) == SUCCESS);
    assert(hashtable.Remove(player60.getID()) == NOT_FOUND);
    assert(hashtable.Find(player64.getID()) == nullptr);
    assert(hashtable.Find(player25.getID()) == nullptr);
    assert(hashtable.Insert(player87.getID(), player87) == SUCCESS);
    assert(hashtable.Remove(player97.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player78.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player57.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player56.getID()) == SUCCESS);
    assert(hashtable.Insert(player27.getID(), player27) == SUCCESS);
    assert(hashtable.Remove(player99.getID()) == SUCCESS);
    assert(hashtable.Find(player69.getID()) != nullptr);
    assert(hashtable.Insert(player84.getID(), player84) == ALREADY_EXIST);
    assert(hashtable.Insert(player9.getID(), player9) == ALREADY_EXIST);
    assert(hashtable.Insert(player86.getID(), player86) == ALREADY_EXIST);
    assert(hashtable.Insert(player4.getID(), player4) == SUCCESS);
    assert(hashtable.Find(player89.getID()) != nullptr);
    assert(hashtable.Remove(player25.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player45.getID(), player45) == ALREADY_EXIST);
    assert(hashtable.Find(player88.getID()) != nullptr);
    assert(hashtable.Insert(player5.getID(), player5) == ALREADY_EXIST);
    assert(hashtable.Insert(player81.getID(), player81) == ALREADY_EXIST);
    assert(hashtable.Find(player67.getID()) != nullptr);
    assert(hashtable.Remove(player14.getID()) == SUCCESS);
    assert(hashtable.Insert(player13.getID(), player13) == SUCCESS);
    assert(hashtable.Remove(player94.getID()) == SUCCESS);
    assert(hashtable.Insert(player12.getID(), player12) == SUCCESS);
    assert(hashtable.Remove(player61.getID()) == NOT_FOUND);
    assert(hashtable.Remove(player39.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player22.getID(), player22) == ALREADY_EXIST);
    assert(hashtable.Find(player6.getID()) == nullptr);
    assert(hashtable.Remove(player89.getID()) == SUCCESS);
    assert(hashtable.Insert(player25.getID(), player25) == SUCCESS);
    assert(hashtable.Remove(player4.getID()) == SUCCESS);
    assert(hashtable.Remove(player20.getID()) == NOT_FOUND);
    assert(hashtable.Find(player47.getID()) != nullptr);
    assert(hashtable.Insert(player14.getID(), player14) == SUCCESS);
    assert(hashtable.Remove(player54.getID()) == NOT_FOUND);
    assert(hashtable.Find(player36.getID()) == nullptr);
    assert(hashtable.Insert(player80.getID(), player80) == ALREADY_EXIST);
    assert(hashtable.Insert(player72.getID(), player72) == ALREADY_EXIST);
    assert(hashtable.Remove(player89.getID()) == NOT_FOUND);
    assert(hashtable.Find(player46.getID()) != nullptr);
    assert(hashtable.Insert(player43.getID(), player43) == SUCCESS);
    assert(hashtable.Insert(player43.getID(), player43) == ALREADY_EXIST);
    assert(hashtable.Remove(player1.getID()) == SUCCESS);
    assert(hashtable.Remove(player35.getID()) == SUCCESS);
    assert(hashtable.Insert(player80.getID(), player80) == ALREADY_EXIST);
    assert(hashtable.Insert(player5.getID(), player5) == ALREADY_EXIST);
    assert(hashtable.Remove(player12.getID()) == SUCCESS);
    assert(hashtable.Find(player95.getID()) == nullptr);
    assert(hashtable.Insert(player36.getID(), player36) == SUCCESS);
    assert(hashtable.Find(player5.getID()) != nullptr);
    assert(hashtable.Find(player71.getID()) == nullptr);
    assert(hashtable.Insert(player57.getID(), player57) == SUCCESS);
    assert(hashtable.Find(player33.getID()) != nullptr);
    assert(hashtable.Find(player8.getID()) == nullptr);
    assert(hashtable.Insert(player13.getID(), player13) == ALREADY_EXIST);
    assert(hashtable.Remove(player18.getID()) == SUCCESS);
    assert(hashtable.Remove(player79.getID()) == SUCCESS);
    assert(hashtable.Find(player7.getID()) != nullptr);
    assert(hashtable.Find(player79.getID()) == nullptr);
    assert(hashtable.Remove(player7.getID()) == SUCCESS);
    assert(hashtable.Remove(player24.getID()) == NOT_FOUND);
    assert(hashtable.Insert(player11.getID(), player11) == SUCCESS);
    assert(hashtable.Insert(player40.getID(), player40) == ALREADY_EXIST);
    assert(hashtable.Insert(player29.getID(), player29) == SUCCESS);
    assert(hashtable.Insert(player80.getID(), player80) == ALREADY_EXIST);

    return 0;
}
