//simple test on 50 players

Player player1(40,74);
Player player2(4,17);
Player player3(30,28);
Player player4(49,24);
Player player5(2,66);
Player player6(19,1);
Player player7(37,100);
Player player8(34,51);
Player player9(17,65);
Player player10(12,82);
Player player11(8,3);
Player player12(16,94);
Player player13(31,35);
Player player14(26,92);
Player player15(41,14);
Player player16(5,58);
Player player17(33,48);
Player player18(28,40);
Player player19(25,20);
Player player20(21,92);
Player player21(45,93);
Player player22(42,37);
Player player23(44,72);
Player player24(10,25);
Player player25(39,61);
Player player26(35,80);
Player player27(36,22);
Player player28(27,76);
Player player29(24,17);
Player player30(22,22);
Player player31(38,55);
Player player32(9,35);
Player player33(13,95);
Player player34(47,89);
Player player35(23,14);
Player player36(1,91);
Player player37(11,2);
Player player38(29,41);
Player player39(20,47);
Player player40(6,76);
Player player41(18,8);
Player player42(46,58);
Player player43(48,13);
Player player44(7,19);
Player player45(15,59);
Player player46(3,46);
Player player47(32,37);
Player player48(14,38);
Player player49(43,4);
assert(table.Find(player10.getID())==-1);
assert(table.Remove(player3.getID())==NOT_FOUND);
assert(table.Insert(player10.getID(), &player10)==SUCCESS);
assert(table.Insert(player14.getID(), &player14)==SUCCESS);
assert(table.Find(player6.getID())==-1);
assert(table.Insert(player15.getID(), &player15)==SUCCESS);
assert(table.Insert(player5.getID(), &player5)==SUCCESS);
assert(table.Find(player11.getID())==-1);
assert(table.Insert(player44.getID(), &player44)==SUCCESS);
assert(table.Find(player39.getID())==-1);
assert(table.Find(player35.getID())==-1);
assert(table.Find(player26.getID())==-1);
assert(table.Find(player11.getID())==-1);
assert(table.Remove(player6.getID())==NOT_FOUND);
assert(table.Insert(player1.getID(), &player1)==SUCCESS);
assert(table.Remove(player12.getID())==NOT_FOUND);
assert(table.Find(player35.getID())==-1);
assert(table.Remove(player17.getID())==NOT_FOUND);
assert(table.Insert(player6.getID(), &player6)==SUCCESS);
assert(table.Remove(player42.getID())==NOT_FOUND);
assert(table.Find(player8.getID())==-1);
assert(table.Remove(player47.getID())==NOT_FOUND);
assert(table.Find(player41.getID())==-1);
assert(table.Find(player20.getID())==-1);
assert(table.Remove(player11.getID())==NOT_FOUND);
assert(table.Insert(player20.getID(), &player20)==SUCCESS);
assert(table.Find(player9.getID())==-1);
assert(table.Find(player6.getID())!=-1);
assert(table.Find(player18.getID())==-1);
assert(table.Insert(player26.getID(), &player26)==SUCCESS);
assert(table.Insert(player42.getID(), &player42)==SUCCESS);
assert(table.Insert(player43.getID(), &player43)==SUCCESS);
assert(table.Remove(player13.getID())==NOT_FOUND);
assert(table.Find(player20.getID())!=-1);
assert(table.Find(player5.getID())!=-1);
assert(table.Find(player18.getID())==-1);
assert(table.Insert(player14.getID(), &player14)==ALREADY_EXIST);
assert(table.Find(player38.getID())==-1);
assert(table.Insert(player40.getID(), &player40)==SUCCESS);
assert(table.Insert(player22.getID(), &player22)==SUCCESS);
assert(table.Insert(player38.getID(), &player38)==SUCCESS);
assert(table.Insert(player45.getID(), &player45)==SUCCESS);
assert(table.Remove(player27.getID())==NOT_FOUND);
assert(table.Find(player2.getID())==-1);
assert(table.Remove(player9.getID())==NOT_FOUND);
assert(table.Remove(player10.getID())==SUCCESS);
assert(table.Insert(player12.getID(), &player12)==SUCCESS);
assert(table.Find(player6.getID())!=-1);
assert(table.Insert(player49.getID(), &player49)==SUCCESS);
assert(table.Insert(player40.getID(), &player40)==ALREADY_EXIST);
assert(table.Find(player42.getID())!=-1);
assert(table.Find(player17.getID())==-1);
assert(table.Remove(player8.getID())==NOT_FOUND);
assert(table.Remove(player1.getID())==SUCCESS);
assert(table.Insert(player42.getID(), &player42)==ALREADY_EXIST);
assert(table.Insert(player45.getID(), &player45)==ALREADY_EXIST);
assert(table.Find(player49.getID())!=-1);
assert(table.Insert(player13.getID(), &player13)==SUCCESS);
assert(table.Remove(player37.getID())==NOT_FOUND);
assert(table.Remove(player24.getID())==NOT_FOUND);
assert(table.Remove(player44.getID())==SUCCESS);
assert(table.Find(player26.getID())!=-1);
assert(table.Find(player3.getID())==-1);
assert(table.Remove(player10.getID())==NOT_FOUND);
assert(table.Remove(player14.getID())==SUCCESS);
assert(table.Remove(player38.getID())==SUCCESS);
assert(table.Find(player37.getID())==-1);
assert(table.Remove(player47.getID())==NOT_FOUND);
assert(table.Insert(player23.getID(), &player23)==SUCCESS);
assert(table.Remove(player24.getID())==NOT_FOUND);
assert(table.Find(player12.getID())!=-1);
assert(table.Insert(player8.getID(), &player8)==SUCCESS);
assert(table.Insert(player13.getID(), &player13)==ALREADY_EXIST);
assert(table.Insert(player7.getID(), &player7)==SUCCESS);
assert(table.Find(player48.getID())==-1);
assert(table.Find(player29.getID())==-1);
assert(table.Find(player24.getID())==-1);
assert(table.Remove(player19.getID())==NOT_FOUND);
assert(table.Insert(player29.getID(), &player29)==SUCCESS);
assert(table.Find(player14.getID())==-1);
assert(table.Find(player17.getID())==-1);
assert(table.Remove(player37.getID())==NOT_FOUND);
assert(table.Find(player17.getID())==-1);
assert(table.Remove(player36.getID())==NOT_FOUND);
assert(table.Find(player28.getID())==-1);
assert(table.Find(player34.getID())==-1);
assert(table.Remove(player48.getID())==NOT_FOUND);
assert(table.Find(player47.getID())==-1);
assert(table.Insert(player26.getID(), &player26)==ALREADY_EXIST);
assert(table.Insert(player9.getID(), &player9)==SUCCESS);
assert(table.Find(player20.getID())!=-1);
assert(table.Find(player11.getID())==-1);
assert(table.Insert(player35.getID(), &player35)==SUCCESS);
assert(table.Remove(player6.getID())==SUCCESS);
assert(table.Find(player41.getID())==-1);
assert(table.Find(player29.getID())!=-1);
assert(table.Insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.Insert(player35.getID(), &player35)==ALREADY_EXIST);
assert(table.Remove(player27.getID())==NOT_FOUND);
